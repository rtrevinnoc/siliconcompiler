name: Lint
on:
  # Runs on pushes to test/ branches and main
  push:
    branches:
      - 'main'
      - 'test/**'
  # Runs on all PRs
  pull_request:
  # Manual Dispatch
  workflow_dispatch:

concurrency:
  group: lint-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  lint_python:
    name: Lint Python Code
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v5
      - name: Lint with Flake8
        run: |
          python3 -m venv .venv
          . .venv/bin/activate
          pip3 install .[lint]
          flake8 --statistics .

  lint_verilog:
    name: Lint Verilog Code
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v5

      - name: Set up Verible
        run: |
          ./siliconcompiler/toolscripts/ubuntu20/install-verible.sh
          echo /opt/verible/bin >> $GITHUB_PATH

      - name: Check format
        id: check-format
        run: |
          ./.github/workflows/bin/format_verilog.sh > files.txt
          cat files.txt
          git diff --exit-code

      - name: Check lint
        if: success() || steps.check-format.conclusion == 'failure'
        run: |
          verible-verilog-lint --rules_config .github/workflows/config/verible.rules `cat files.txt`

  lint_tcl:
    name: Lint TCL scripts
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v5

      - name: Lint with tclint
        run: |
          python3 -m venv .venv
          . .venv/bin/activate
          pip3 install .[lint]
          tclfmt --check .
          tclint .

  spelling:
    name: Check spelling
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v5

      - name: Check spelling
        run: |
          python3 -m venv .venv
          . .venv/bin/activate
          pip3 install .[lint]
          codespell
